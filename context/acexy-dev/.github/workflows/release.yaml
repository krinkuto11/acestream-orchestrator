name: Create and publish the Docker image
on:
    release:
        types: [published]
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push-image:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
            attestations: write
            id-token: write
        steps:
            - name: Check out the repository
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                flavor: |
                  latest=${{ !github.event.release.prerelease }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push the Docker image
              id: push
              uses: docker/build-push-action@v6
              with:
                context: .
                platforms: linux/amd64,linux/arm64,linux/arm/v7
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v1
              with:
                subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                subject-digest: ${{ steps.push.outputs.digest }}
                push-to-registry: true

            - name: Update release information
              uses: irongut/EditRelease@v1.2.0
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                id: ${{ github.event.release.id }}
                body: "`docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }}`"
