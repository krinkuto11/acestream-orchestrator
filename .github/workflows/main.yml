name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/amd64
          - platform: linux/arm64
          - platform: linux/arm/v7

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-${{ runner.arch }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-buildx-

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Determine Docker image tag
      id: vars
      run: |
        if [[ "${GITHUB_REF##*/}" == "main" ]]; then
          echo "tag=latest" >> "$GITHUB_OUTPUT"
        elif [[ "${GITHUB_REF##*/}" == "dev" ]]; then
          echo "tag=dev" >> "$GITHUB_OUTPUT"
        else
          echo "tag=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
        fi

    - name: Build and push Docker image by digest
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: ${{ matrix.platform }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        outputs: type=image,name=ghcr.io/${{ github.repository_owner }}/acestream-orchestrator,push-by-digest=true,name-canonical=true,push=true

    - name: Export digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ strategy.job-index }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Docker image tag
        id: vars
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          elif [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "tag=dev" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
          fi

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          IMAGE_TAG="${{ steps.vars.outputs.tag }}"
          docker buildx imagetools create -t "ghcr.io/${{ github.repository_owner }}/acestream-orchestrator:${IMAGE_TAG}" \
            $(printf 'ghcr.io/${{ github.repository_owner }}/acestream-orchestrator@sha256:%s ' *)

      - name: Inspect image
        run: |
          IMAGE_TAG="${{ steps.vars.outputs.tag }}"
          docker buildx imagetools inspect "ghcr.io/${{ github.repository_owner }}/acestream-orchestrator:${IMAGE_TAG}"
